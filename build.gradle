buildscript {
    ext {
        kotlinVersion = '1.2.20'
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.4'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'

group = 'com.uitnetwork'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile 'com.google.protobuf:protobuf-java:3.5.1'
    compile 'io.github.microutils:kotlin-logging:1.4.9'
    compile 'com.googlecode.protobuf-java-format:protobuf-java-format:1.4'

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/resources/protobuf'
        }
    }
}

protobuf {
    protoc {
//        USE DEFAULT ONE FROM SYSTEM
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
    }
}

idea {
    module {
        sourceDirs += file("${projectDir}/src/main/resources/protobuf")
    }
}
